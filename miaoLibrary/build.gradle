import org.jetbrains.kotlin.gradle.dsl.JvmTarget

plugins {
    alias(libs.plugins.androidLibrary)
    alias(libs.plugins.jetbrainsKotlinAndroid)
    id 'maven-publish'
    alias(libs.plugins.kotlinCompose)
}

android {
    namespace 'miao.kmirror.miaolibrary'
    compileSdk 35

    defaultConfig {
        minSdk 21

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        consumerProguardFiles "consumer-rules.pro"
    }

    publishing {
        singleVariant("release")
        singleVariant("debug")
    }

    buildFeatures {
        viewBinding true
        compose true
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_17
        targetCompatibility JavaVersion.VERSION_17


    }
    kotlin {
        compilerOptions {
            jvmTarget.set(JvmTarget.JVM_17) // 或者直接使用字符串 "17"
            // 如果还有其他 Kotlin 特定的编译选项，也可以在这里配置
            // freeCompilerArgs.add("-Xopt-in=kotlin.RequiresOptIn")
        }
    }
}

dependencies {
    implementation libs.gson
    implementation libs.androidx.core.ktx
    implementation libs.androidx.appcompat
    implementation libs.material
    implementation(libs.androidx.lifecycle.runtime.ktx)
    implementation(libs.androidx.activity.compose)
    implementation(platform(libs.androidx.compose.bom))
    implementation(libs.androidx.ui)
    implementation(libs.androidx.ui.graphics)
    implementation(libs.androidx.ui.tooling.preview)
    implementation(libs.androidx.material3)


    testImplementation libs.junit
    androidTestImplementation libs.androidx.junit
    androidTestImplementation libs.androidx.espresso.core
}


tasks.register('generateSourcesJar', Jar) {
    from android.sourceSets.main.java.srcDirs
    classifier 'sources'
}


configurations.configureEach {
    resolutionStrategy.cacheChangingModulesFor(0, "seconds")
}
/**
 * 发布使用test
 * */
afterEvaluate {
    publishing {
        publications {
            // Creates a Maven publication called "release".
            group = 'com.github.shadowmirror'
            version = '1.0.0'
            release(MavenPublication) {
                // Applies the component for the release build variant.
                from components.release
                groupId = group
                artifactId = 'MiaoLib'
                version = version
            }
//            debug(MavenPublication) {
//                // Applies the component for the release build variant.
//                from components.debug
//                groupId = group
//                artifactId = 'MiaoLib-debug'
//                version = version
//            }
        }
    }
}